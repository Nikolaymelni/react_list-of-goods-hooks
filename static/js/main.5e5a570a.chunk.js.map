{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReversed","NONE","sortType","setType","goods","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","handleSort","type","className","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4BF,mBAASH,EAASM,MAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EA9BD,SACLA,EADK,GAGJ,IADCF,EACF,EADEA,SAAUH,EACZ,EADYA,WAENM,EAAY,YAAOD,GAoBzB,OAlBAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQN,GACN,KAAKP,EAASc,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKb,EAASgB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,KAAKjB,EAASM,KACd,QACE,OAAO,MAITF,GACFM,EAAaQ,UAGRR,EAMOS,CAAkBlB,EAAiB,CAAEG,aAAYG,aAEzDa,EAAa,SAACC,GAAD,OAAoB,kBAAMb,EAAQa,KAOrD,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACED,KAAK,SACLC,UAAWC,IAAW,iBACpB,CAAE,WAAYhB,IAAaP,EAASc,WACtCU,QAASJ,EAAWpB,EAASc,UAJ/B,iCASA,wBACEO,KAAK,SACLC,UAAWC,IAAW,oBACpB,CAAE,WAAYhB,IAAaP,EAASgB,SACtCQ,QAASJ,EAAWpB,EAASgB,QAJ/B,4BASA,wBACEK,KAAK,SACLC,UAAWC,IAAW,oBACpB,CAAE,YAAanB,IACjBoB,QAAS,kBAAMnB,GAAaD,IAJ9B,sBASGG,IAAaP,EAASc,UAAYP,IAAaP,EAASgB,QACtDZ,IACH,wBACEiB,KAAK,SACLC,UAAU,4BACVE,QAxCc,WACtBhB,EAAQR,EAASM,MACjBD,GAAY,IAmCN,sBAUJ,6BACE,6BACGI,EAAMgB,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,cC9GrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5e5a570a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype State = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: State,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setType] = useState(SortType.NONE);\n  const goods = getReorderedGoods(goodsFromServer, { isReversed, sortType });\n\n  const handleSort = (type: SortType) => () => setType(type);\n\n  const handleSortReset = () => {\n    setType(SortType.NONE);\n    setReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET })}\n          onClick={handleSort(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success',\n            { 'is-light': sortType !== SortType.LENGTH })}\n          onClick={handleSort(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning',\n            { 'is-light': !isReversed })}\n          onClick={() => setReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {((sortType === SortType.ALPHABET || sortType === SortType.LENGTH)\n          || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleSortReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map(good => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}